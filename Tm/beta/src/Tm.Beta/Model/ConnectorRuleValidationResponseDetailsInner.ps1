#
# Identity Security Cloud Beta API
# Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.
# Version: 3.1.0-beta
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

CodeErrorDetail

.PARAMETER Line
The line number where the issue occurred
.PARAMETER Column
the column number where the issue occurred
.PARAMETER Messsage
a description of the issue in the code
.OUTPUTS

ConnectorRuleValidationResponseDetailsInner<PSCustomObject>
#>

function Initialize-BetaConnectorRuleValidationResponseDetailsInner {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [Int32]
        ${Line},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [Int32]
        ${Column},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Messsage}
    )

    Process {
        'Creating PSCustomObject: Tm.Beta => BetaConnectorRuleValidationResponseDetailsInner' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if (!$Line) {
            throw "invalid value for 'Line', 'Line' cannot be null."
        }

        if (!$Column) {
            throw "invalid value for 'Column', 'Column' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "line" = ${Line}
            "column" = ${Column}
            "messsage" = ${Messsage}
        }

        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ConnectorRuleValidationResponseDetailsInner<PSCustomObject>

.DESCRIPTION

Convert from JSON to ConnectorRuleValidationResponseDetailsInner<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ConnectorRuleValidationResponseDetailsInner<PSCustomObject>
#>
function ConvertFrom-BetaJsonToConnectorRuleValidationResponseDetailsInner {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: Tm.Beta => BetaConnectorRuleValidationResponseDetailsInner' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in BetaConnectorRuleValidationResponseDetailsInner
        $AllProperties = ("line", "column", "messsage")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'line' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "line"))) {
            throw "Error! JSON cannot be serialized due to the required property 'line' missing."
        } else {
            $Line = $JsonParameters.PSobject.Properties["line"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "column"))) {
            throw "Error! JSON cannot be serialized due to the required property 'column' missing."
        } else {
            $Column = $JsonParameters.PSobject.Properties["column"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "messsage"))) { #optional property not found
            $Messsage = $null
        } else {
            $Messsage = $JsonParameters.PSobject.Properties["messsage"].value
        }

        $PSO = [PSCustomObject]@{
            "line" = ${Line}
            "column" = ${Column}
            "messsage" = ${Messsage}
        }

        return $PSO
    }

}

