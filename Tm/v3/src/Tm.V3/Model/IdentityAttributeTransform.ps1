#
# Identity Security Cloud V3 API
# Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.
# Version: 3.0.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Defines a transformation definition for an identity attribute.

.PARAMETER IdentityAttributeName
Name of the identity attribute.
.PARAMETER TransformDefinition
No description available.
.OUTPUTS

IdentityAttributeTransform<PSCustomObject>
#>

function Initialize-IdentityAttributeTransform {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${IdentityAttributeName},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${TransformDefinition}
    )

    Process {
        'Creating PSCustomObject: Tm.V3 => IdentityAttributeTransform' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "identityAttributeName" = ${IdentityAttributeName}
            "transformDefinition" = ${TransformDefinition}
        }

        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to IdentityAttributeTransform<PSCustomObject>

.DESCRIPTION

Convert from JSON to IdentityAttributeTransform<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

IdentityAttributeTransform<PSCustomObject>
#>
function ConvertFrom-JsonToIdentityAttributeTransform {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: Tm.V3 => IdentityAttributeTransform' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in IdentityAttributeTransform
        $AllProperties = ("identityAttributeName", "transformDefinition")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "identityAttributeName"))) { #optional property not found
            $IdentityAttributeName = $null
        } else {
            $IdentityAttributeName = $JsonParameters.PSobject.Properties["identityAttributeName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "transformDefinition"))) { #optional property not found
            $TransformDefinition = $null
        } else {
            $TransformDefinition = $JsonParameters.PSobject.Properties["transformDefinition"].value
        }

        $PSO = [PSCustomObject]@{
            "identityAttributeName" = ${IdentityAttributeName}
            "transformDefinition" = ${TransformDefinition}
        }

        return $PSO
    }

}

