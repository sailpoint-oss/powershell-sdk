#
# Identity Security Cloud V2025 API
# Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.
# Version: v2025
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

The Account Source of the connected Application

.PARAMETER UseForPasswordManagement
Use this Account Source for password management
.PARAMETER PasswordPolicies
A list of Password Policies for this Account Source
.OUTPUTS

DependantAppConnectionsAccountSource<PSCustomObject>
#>

function Initialize-V2025DependantAppConnectionsAccountSource {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${UseForPasswordManagement} = $false,
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${PasswordPolicies}
    )

    Process {
        'Creating PSCustomObject: PSSailpoint.V2025 => V2025DependantAppConnectionsAccountSource' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "useForPasswordManagement" = ${UseForPasswordManagement}
            "passwordPolicies" = ${PasswordPolicies}
        }

        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to DependantAppConnectionsAccountSource<PSCustomObject>

.DESCRIPTION

Convert from JSON to DependantAppConnectionsAccountSource<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

DependantAppConnectionsAccountSource<PSCustomObject>
#>
function ConvertFrom-V2025JsonToDependantAppConnectionsAccountSource {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSSailpoint.V2025 => V2025DependantAppConnectionsAccountSource' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in V2025DependantAppConnectionsAccountSource
        $AllProperties = ("useForPasswordManagement", "passwordPolicies")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "useForPasswordManagement"))) { #optional property not found
            $UseForPasswordManagement = $null
        } else {
            $UseForPasswordManagement = $JsonParameters.PSobject.Properties["useForPasswordManagement"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "passwordPolicies"))) { #optional property not found
            $PasswordPolicies = $null
        } else {
            $PasswordPolicies = $JsonParameters.PSobject.Properties["passwordPolicies"].value
        }

        $PSO = [PSCustomObject]@{
            "useForPasswordManagement" = ${UseForPasswordManagement}
            "passwordPolicies" = ${PasswordPolicies}
        }

        return $PSO
    }

}

