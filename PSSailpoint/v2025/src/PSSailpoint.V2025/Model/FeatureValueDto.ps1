#
# Identity Security Cloud V2025 API
# Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.
# Version: v2025
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Feature
The type of feature
.PARAMETER Numerator
The number of identities that have access to the feature
.PARAMETER Denominator
The number of identities with the corresponding feature
.OUTPUTS

FeatureValueDto<PSCustomObject>
#>

function Initialize-V2025FeatureValueDto {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Feature},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${Numerator},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${Denominator}
    )

    Process {
        'Creating PSCustomObject: PSSailpoint.V2025 => V2025FeatureValueDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "feature" = ${Feature}
            "numerator" = ${Numerator}
            "denominator" = ${Denominator}
        }

        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to FeatureValueDto<PSCustomObject>

.DESCRIPTION

Convert from JSON to FeatureValueDto<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

FeatureValueDto<PSCustomObject>
#>
function ConvertFrom-V2025JsonToFeatureValueDto {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSSailpoint.V2025 => V2025FeatureValueDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in V2025FeatureValueDto
        $AllProperties = ("feature", "numerator", "denominator")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "feature"))) { #optional property not found
            $Feature = $null
        } else {
            $Feature = $JsonParameters.PSobject.Properties["feature"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "numerator"))) { #optional property not found
            $Numerator = $null
        } else {
            $Numerator = $JsonParameters.PSobject.Properties["numerator"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "denominator"))) { #optional property not found
            $Denominator = $null
        } else {
            $Denominator = $JsonParameters.PSobject.Properties["denominator"].value
        }

        $PSO = [PSCustomObject]@{
            "feature" = ${Feature}
            "numerator" = ${Numerator}
            "denominator" = ${Denominator}
        }

        return $PSO
    }

}

