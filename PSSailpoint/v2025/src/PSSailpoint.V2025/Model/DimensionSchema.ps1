#
# Identity Security Cloud V2025 API
# Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.
# Version: v2025
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Contains a list of dimension attributes. Required only for Dynamic Roles

.PARAMETER DimensionAttributes
No description available.
.OUTPUTS

DimensionSchema<PSCustomObject>
#>

function Initialize-V2025DimensionSchema {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${DimensionAttributes}
    )

    Process {
        'Creating PSCustomObject: PSSailpoint.V2025 => V2025DimensionSchema' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "dimensionAttributes" = ${DimensionAttributes}
        }

        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to DimensionSchema<PSCustomObject>

.DESCRIPTION

Convert from JSON to DimensionSchema<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

DimensionSchema<PSCustomObject>
#>
function ConvertFrom-V2025JsonToDimensionSchema {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSSailpoint.V2025 => V2025DimensionSchema' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in V2025DimensionSchema
        $AllProperties = ("dimensionAttributes")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "dimensionAttributes"))) { #optional property not found
            $DimensionAttributes = $null
        } else {
            $DimensionAttributes = $JsonParameters.PSobject.Properties["dimensionAttributes"].value
        }

        $PSO = [PSCustomObject]@{
            "dimensionAttributes" = ${DimensionAttributes}
        }

        return $PSO
    }

}

