#
# Identity Security Cloud V2025 API
# Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.
# Version: v2025
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

It represents a summary of a user level publish operation, including its metadata and status.

.PARAMETER UserLevelId
The unique identifier of the UserLevel.
.PARAMETER Publish
Indicates whether the API call triggered a publish operation.
.PARAMETER Status
The status of the UserLevel publish operation.
.PARAMETER Modified
The last modification timestamp of the UserLevel.
.OUTPUTS

UserLevelPublishSummary<PSCustomObject>
#>

function Initialize-V2025UserLevelPublishSummary {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${UserLevelId},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${Publish} = $false,
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Status},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${Modified}
    )

    Process {
        'Creating PSCustomObject: PSSailpoint.V2025 => V2025UserLevelPublishSummary' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "userLevelId" = ${UserLevelId}
            "publish" = ${Publish}
            "status" = ${Status}
            "modified" = ${Modified}
        }

        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to UserLevelPublishSummary<PSCustomObject>

.DESCRIPTION

Convert from JSON to UserLevelPublishSummary<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

UserLevelPublishSummary<PSCustomObject>
#>
function ConvertFrom-V2025JsonToUserLevelPublishSummary {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSSailpoint.V2025 => V2025UserLevelPublishSummary' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in V2025UserLevelPublishSummary
        $AllProperties = ("userLevelId", "publish", "status", "modified")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "userLevelId"))) { #optional property not found
            $UserLevelId = $null
        } else {
            $UserLevelId = $JsonParameters.PSobject.Properties["userLevelId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "publish"))) { #optional property not found
            $Publish = $null
        } else {
            $Publish = $JsonParameters.PSobject.Properties["publish"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "status"))) { #optional property not found
            $Status = $null
        } else {
            $Status = $JsonParameters.PSobject.Properties["status"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "modified"))) { #optional property not found
            $Modified = $null
        } else {
            $Modified = $JsonParameters.PSobject.Properties["modified"].value
        }

        $PSO = [PSCustomObject]@{
            "userLevelId" = ${UserLevelId}
            "publish" = ${Publish}
            "status" = ${Status}
            "modified" = ${Modified}
        }

        return $PSO
    }

}

