#
# Identity Security Cloud V2025 API
# Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.
# Version: v2025
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER DependencyType
The type of dependency type that is missing in the SourceConnections
.PARAMETER Reason
The reason why this dependency is missing
.OUTPUTS

DependantConnectionsMissingDto<PSCustomObject>
#>

function Initialize-V2025DependantConnectionsMissingDto {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("identityProfiles", "credentialProfiles", "mappingProfiles", "sourceAttributes", "dependantCustomTransforms", "dependantApps")]
        [String]
        ${DependencyType},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Reason}
    )

    Process {
        'Creating PSCustomObject: PSSailpoint.V2025 => V2025DependantConnectionsMissingDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "dependencyType" = ${DependencyType}
            "reason" = ${Reason}
        }

        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to DependantConnectionsMissingDto<PSCustomObject>

.DESCRIPTION

Convert from JSON to DependantConnectionsMissingDto<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

DependantConnectionsMissingDto<PSCustomObject>
#>
function ConvertFrom-V2025JsonToDependantConnectionsMissingDto {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSSailpoint.V2025 => V2025DependantConnectionsMissingDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in V2025DependantConnectionsMissingDto
        $AllProperties = ("dependencyType", "reason")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "dependencyType"))) { #optional property not found
            $DependencyType = $null
        } else {
            $DependencyType = $JsonParameters.PSobject.Properties["dependencyType"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "reason"))) { #optional property not found
            $Reason = $null
        } else {
            $Reason = $JsonParameters.PSobject.Properties["reason"].value
        }

        $PSO = [PSCustomObject]@{
            "dependencyType" = ${DependencyType}
            "reason" = ${Reason}
        }

        return $PSO
    }

}

