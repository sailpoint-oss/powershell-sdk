#
# Identity Security Cloud V2025 API
# Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.
# Version: v2025
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Configuration for reminders.

.PARAMETER Enabled
Indicates if reminders are enabled.
.PARAMETER DaysUntilFirstReminder
Number of days until the first reminder.
.PARAMETER ReminderCronSchedule
Cron schedule for reminders.
.PARAMETER MaxReminders
Maximum number of reminders. Max is 20.
.OUTPUTS

ApprovalConfigReminderConfig<PSCustomObject>
#>

function Initialize-V2025ApprovalConfigReminderConfig {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${Enabled} = $false,
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${DaysUntilFirstReminder},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ReminderCronSchedule},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${MaxReminders}
    )

    Process {
        'Creating PSCustomObject: PSSailpoint.V2025 => V2025ApprovalConfigReminderConfig' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "enabled" = ${Enabled}
            "daysUntilFirstReminder" = ${DaysUntilFirstReminder}
            "reminderCronSchedule" = ${ReminderCronSchedule}
            "maxReminders" = ${MaxReminders}
        }

        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ApprovalConfigReminderConfig<PSCustomObject>

.DESCRIPTION

Convert from JSON to ApprovalConfigReminderConfig<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ApprovalConfigReminderConfig<PSCustomObject>
#>
function ConvertFrom-V2025JsonToApprovalConfigReminderConfig {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSSailpoint.V2025 => V2025ApprovalConfigReminderConfig' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in V2025ApprovalConfigReminderConfig
        $AllProperties = ("enabled", "daysUntilFirstReminder", "reminderCronSchedule", "maxReminders")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "enabled"))) { #optional property not found
            $Enabled = $null
        } else {
            $Enabled = $JsonParameters.PSobject.Properties["enabled"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "daysUntilFirstReminder"))) { #optional property not found
            $DaysUntilFirstReminder = $null
        } else {
            $DaysUntilFirstReminder = $JsonParameters.PSobject.Properties["daysUntilFirstReminder"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "reminderCronSchedule"))) { #optional property not found
            $ReminderCronSchedule = $null
        } else {
            $ReminderCronSchedule = $JsonParameters.PSobject.Properties["reminderCronSchedule"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "maxReminders"))) { #optional property not found
            $MaxReminders = $null
        } else {
            $MaxReminders = $JsonParameters.PSobject.Properties["maxReminders"].value
        }

        $PSO = [PSCustomObject]@{
            "enabled" = ${Enabled}
            "daysUntilFirstReminder" = ${DaysUntilFirstReminder}
            "reminderCronSchedule" = ${ReminderCronSchedule}
            "maxReminders" = ${MaxReminders}
        }

        return $PSO
    }

}

