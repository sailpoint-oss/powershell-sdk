#
# Identity Security Cloud V2025 API
# Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.
# Version: v2025
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Represent a form conditional.

.PARAMETER RuleOperator
ConditionRuleLogicalOperatorType value. AND ConditionRuleLogicalOperatorTypeAnd OR ConditionRuleLogicalOperatorTypeOr
.PARAMETER Rules
List of rules.
.PARAMETER Effects
List of effects.
.OUTPUTS

FormCondition<PSCustomObject>
#>

function Initialize-V2025FormCondition {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("AND", "OR")]
        [String]
        ${RuleOperator},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${Rules},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${Effects}
    )

    Process {
        'Creating PSCustomObject: PSSailpoint.V2025 => V2025FormCondition' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "ruleOperator" = ${RuleOperator}
            "rules" = ${Rules}
            "effects" = ${Effects}
        }

        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to FormCondition<PSCustomObject>

.DESCRIPTION

Convert from JSON to FormCondition<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

FormCondition<PSCustomObject>
#>
function ConvertFrom-V2025JsonToFormCondition {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSSailpoint.V2025 => V2025FormCondition' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in V2025FormCondition
        $AllProperties = ("ruleOperator", "rules", "effects")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ruleOperator"))) { #optional property not found
            $RuleOperator = $null
        } else {
            $RuleOperator = $JsonParameters.PSobject.Properties["ruleOperator"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "rules"))) { #optional property not found
            $Rules = $null
        } else {
            $Rules = $JsonParameters.PSobject.Properties["rules"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "effects"))) { #optional property not found
            $Effects = $null
        } else {
            $Effects = $JsonParameters.PSobject.Properties["effects"].value
        }

        $PSO = [PSCustomObject]@{
            "ruleOperator" = ${RuleOperator}
            "rules" = ${Rules}
            "effects" = ${Effects}
        }

        return $PSO
    }

}

