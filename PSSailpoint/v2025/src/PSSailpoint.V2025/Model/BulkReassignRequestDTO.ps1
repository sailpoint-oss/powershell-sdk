#
# Identity Security Cloud V2025 API
# Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.
# Version: v2025
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

BulkReassignRequestDTO is the input struct that represents the request body required to facilitate a bulk reassignment action for a set of generic approval requests.

.PARAMETER ApprovalIds
Array of Approval IDs to be bulk reassigned
.PARAMETER Comment
Optional comment to include with the bulk reassignment request
.PARAMETER ReassignFrom
Identity ID from which the approval requests are being reassigned
.PARAMETER ReassignTo
ReassignTo signifies the Identity ID that the approval request is being reassigned to
.OUTPUTS

BulkReassignRequestDTO<PSCustomObject>
#>

function Initialize-V2025BulkReassignRequestDTO {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${ApprovalIds},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Comment},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ReassignFrom},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ReassignTo}
    )

    Process {
        'Creating PSCustomObject: PSSailpoint.V2025 => V2025BulkReassignRequestDTO' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "approvalIds" = ${ApprovalIds}
            "comment" = ${Comment}
            "reassignFrom" = ${ReassignFrom}
            "reassignTo" = ${ReassignTo}
        }

        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to BulkReassignRequestDTO<PSCustomObject>

.DESCRIPTION

Convert from JSON to BulkReassignRequestDTO<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

BulkReassignRequestDTO<PSCustomObject>
#>
function ConvertFrom-V2025JsonToBulkReassignRequestDTO {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSSailpoint.V2025 => V2025BulkReassignRequestDTO' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in V2025BulkReassignRequestDTO
        $AllProperties = ("approvalIds", "comment", "reassignFrom", "reassignTo")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "approvalIds"))) { #optional property not found
            $ApprovalIds = $null
        } else {
            $ApprovalIds = $JsonParameters.PSobject.Properties["approvalIds"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "comment"))) { #optional property not found
            $Comment = $null
        } else {
            $Comment = $JsonParameters.PSobject.Properties["comment"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "reassignFrom"))) { #optional property not found
            $ReassignFrom = $null
        } else {
            $ReassignFrom = $JsonParameters.PSobject.Properties["reassignFrom"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "reassignTo"))) { #optional property not found
            $ReassignTo = $null
        } else {
            $ReassignTo = $JsonParameters.PSobject.Properties["reassignTo"].value
        }

        $PSO = [PSCustomObject]@{
            "approvalIds" = ${ApprovalIds}
            "comment" = ${Comment}
            "reassignFrom" = ${ReassignFrom}
            "reassignTo" = ${ReassignTo}
        }

        return $PSO
    }

}

