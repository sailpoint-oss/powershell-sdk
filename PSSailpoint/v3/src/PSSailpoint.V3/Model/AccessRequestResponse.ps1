#
# Identity Security Cloud V3 API
# Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.
# Version: 3.0.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER NewRequests
A list of new access request tracking data mapped to the values requested.
.PARAMETER ExistingRequests
A list of existing access request tracking data mapped to the values requested.  This indicates access has already been requested for this item.
.OUTPUTS

AccessRequestResponse<PSCustomObject>
#>

function Initialize-AccessRequestResponse {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${NewRequests},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${ExistingRequests}
    )

    Process {
        'Creating PSCustomObject: PSSailpoint.V3 => AccessRequestResponse' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "newRequests" = ${NewRequests}
            "existingRequests" = ${ExistingRequests}
        }

        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to AccessRequestResponse<PSCustomObject>

.DESCRIPTION

Convert from JSON to AccessRequestResponse<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

AccessRequestResponse<PSCustomObject>
#>
function ConvertFrom-JsonToAccessRequestResponse {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSSailpoint.V3 => AccessRequestResponse' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in AccessRequestResponse
        $AllProperties = ("newRequests", "existingRequests")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "newRequests"))) { #optional property not found
            $NewRequests = $null
        } else {
            $NewRequests = $JsonParameters.PSobject.Properties["newRequests"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "existingRequests"))) { #optional property not found
            $ExistingRequests = $null
        } else {
            $ExistingRequests = $JsonParameters.PSobject.Properties["existingRequests"].value
        }

        $PSO = [PSCustomObject]@{
            "newRequests" = ${NewRequests}
            "existingRequests" = ${ExistingRequests}
        }

        return $PSO
    }

}

