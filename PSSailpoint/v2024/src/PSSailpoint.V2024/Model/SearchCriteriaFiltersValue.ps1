#
# Identity Security Cloud V2024 API
# Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.
# Version: v2024
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Type
The type of filter, e.g., ""TERMS"" or ""RANGE"".
.PARAMETER Terms
Terms to filter by (for ""TERMS"" type).
.PARAMETER Range
No description available.
.OUTPUTS

SearchCriteriaFiltersValue<PSCustomObject>
#>

function Initialize-V2024SearchCriteriaFiltersValue {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Type},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${Terms},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Range}
    )

    Process {
        'Creating PSCustomObject: PSSailpoint.V2024 => V2024SearchCriteriaFiltersValue' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "type" = ${Type}
            "terms" = ${Terms}
            "range" = ${Range}
        }

        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to SearchCriteriaFiltersValue<PSCustomObject>

.DESCRIPTION

Convert from JSON to SearchCriteriaFiltersValue<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

SearchCriteriaFiltersValue<PSCustomObject>
#>
function ConvertFrom-V2024JsonToSearchCriteriaFiltersValue {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSSailpoint.V2024 => V2024SearchCriteriaFiltersValue' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in V2024SearchCriteriaFiltersValue
        $AllProperties = ("type", "terms", "range")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "type"))) { #optional property not found
            $Type = $null
        } else {
            $Type = $JsonParameters.PSobject.Properties["type"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "terms"))) { #optional property not found
            $Terms = $null
        } else {
            $Terms = $JsonParameters.PSobject.Properties["terms"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "range"))) { #optional property not found
            $Range = $null
        } else {
            $Range = $JsonParameters.PSobject.Properties["range"].value
        }

        $PSO = [PSCustomObject]@{
            "type" = ${Type}
            "terms" = ${Terms}
            "range" = ${Range}
        }

        return $PSO
    }

}

