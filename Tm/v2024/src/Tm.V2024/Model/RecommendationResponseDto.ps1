#
# Identity Security Cloud V2024 API
# Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.
# Version: v2024
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Response
No description available.
.OUTPUTS

RecommendationResponseDto<PSCustomObject>
#>

function Initialize-V2024RecommendationResponseDto {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${Response}
    )

    Process {
        'Creating PSCustomObject: Tm.V2024 => V2024RecommendationResponseDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "response" = ${Response}
        }

        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to RecommendationResponseDto<PSCustomObject>

.DESCRIPTION

Convert from JSON to RecommendationResponseDto<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

RecommendationResponseDto<PSCustomObject>
#>
function ConvertFrom-V2024JsonToRecommendationResponseDto {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: Tm.V2024 => V2024RecommendationResponseDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in V2024RecommendationResponseDto
        $AllProperties = ("response")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "response"))) { #optional property not found
            $Response = $null
        } else {
            $Response = $JsonParameters.PSobject.Properties["response"].value
        }

        $PSO = [PSCustomObject]@{
            "response" = ${Response}
        }

        return $PSO
    }

}

