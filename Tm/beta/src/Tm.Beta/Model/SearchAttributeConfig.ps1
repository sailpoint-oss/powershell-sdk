#
# Identity Security Cloud Beta API
# Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.
# Version: 3.1.0-beta
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Name
Name of the new attribute
.PARAMETER DisplayName
The display name of the new attribute
.PARAMETER ApplicationAttributes
Map of application id and their associated attribute.
.OUTPUTS

SearchAttributeConfig<PSCustomObject>
#>

function Initialize-BetaSearchAttributeConfig {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Name},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${DisplayName},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${ApplicationAttributes}
    )

    Process {
        'Creating PSCustomObject: Tm.Beta => BetaSearchAttributeConfig' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "name" = ${Name}
            "displayName" = ${DisplayName}
            "applicationAttributes" = ${ApplicationAttributes}
        }

        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to SearchAttributeConfig<PSCustomObject>

.DESCRIPTION

Convert from JSON to SearchAttributeConfig<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

SearchAttributeConfig<PSCustomObject>
#>
function ConvertFrom-BetaJsonToSearchAttributeConfig {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: Tm.Beta => BetaSearchAttributeConfig' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in BetaSearchAttributeConfig
        $AllProperties = ("name", "displayName", "applicationAttributes")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "name"))) { #optional property not found
            $Name = $null
        } else {
            $Name = $JsonParameters.PSobject.Properties["name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "displayName"))) { #optional property not found
            $DisplayName = $null
        } else {
            $DisplayName = $JsonParameters.PSobject.Properties["displayName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "applicationAttributes"))) { #optional property not found
            $ApplicationAttributes = $null
        } else {
            $ApplicationAttributes = $JsonParameters.PSobject.Properties["applicationAttributes"].value
        }

        $PSO = [PSCustomObject]@{
            "name" = ${Name}
            "displayName" = ${DisplayName}
            "applicationAttributes" = ${ApplicationAttributes}
        }

        return $PSO
    }

}

