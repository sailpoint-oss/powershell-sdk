#
# Identity Security Cloud V2025 API
# Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.
# Version: v2025
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Criteria for approval

.PARAMETER CalculationType
This defines what the field ""value"" will be used as, either a count or percentage of the total approvers that need to approve
.PARAMETER Value
The value that needs to be met for the approval criteria
.OUTPUTS

ApprovalApprovalCriteriaApproval<PSCustomObject>
#>

function Initialize-V2025ApprovalApprovalCriteriaApproval {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("COUNT", "PERCENT")]
        [String]
        ${CalculationType},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${Value}
    )

    Process {
        'Creating PSCustomObject: PSSailpoint.V2025 => V2025ApprovalApprovalCriteriaApproval' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "calculationType" = ${CalculationType}
            "value" = ${Value}
        }

        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ApprovalApprovalCriteriaApproval<PSCustomObject>

.DESCRIPTION

Convert from JSON to ApprovalApprovalCriteriaApproval<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ApprovalApprovalCriteriaApproval<PSCustomObject>
#>
function ConvertFrom-V2025JsonToApprovalApprovalCriteriaApproval {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSSailpoint.V2025 => V2025ApprovalApprovalCriteriaApproval' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in V2025ApprovalApprovalCriteriaApproval
        $AllProperties = ("calculationType", "value")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "calculationType"))) { #optional property not found
            $CalculationType = $null
        } else {
            $CalculationType = $JsonParameters.PSobject.Properties["calculationType"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "value"))) { #optional property not found
            $Value = $null
        } else {
            $Value = $JsonParameters.PSobject.Properties["value"].value
        }

        $PSO = [PSCustomObject]@{
            "calculationType" = ${CalculationType}
            "value" = ${Value}
        }

        return $PSO
    }

}

