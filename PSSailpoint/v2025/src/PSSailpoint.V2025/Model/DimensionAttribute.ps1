#
# Identity Security Cloud V2025 API
# Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.
# Version: v2025
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

A dimension attribute

.PARAMETER Name
Name of the attribute
.PARAMETER DisplayName
Display name of the attribute
.PARAMETER Derived
If an attribute is derived, its value comes from the identity. Otherwise, it can be provided with access request
.OUTPUTS

DimensionAttribute<PSCustomObject>
#>

function Initialize-V2025DimensionAttribute {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Name},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${DisplayName},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${Derived} = $true
    )

    Process {
        'Creating PSCustomObject: PSSailpoint.V2025 => V2025DimensionAttribute' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "name" = ${Name}
            "displayName" = ${DisplayName}
            "derived" = ${Derived}
        }

        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to DimensionAttribute<PSCustomObject>

.DESCRIPTION

Convert from JSON to DimensionAttribute<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

DimensionAttribute<PSCustomObject>
#>
function ConvertFrom-V2025JsonToDimensionAttribute {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSSailpoint.V2025 => V2025DimensionAttribute' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in V2025DimensionAttribute
        $AllProperties = ("name", "displayName", "derived")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "name"))) { #optional property not found
            $Name = $null
        } else {
            $Name = $JsonParameters.PSobject.Properties["name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "displayName"))) { #optional property not found
            $DisplayName = $null
        } else {
            $DisplayName = $JsonParameters.PSobject.Properties["displayName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "derived"))) { #optional property not found
            $Derived = $null
        } else {
            $Derived = $JsonParameters.PSobject.Properties["derived"].value
        }

        $PSO = [PSCustomObject]@{
            "name" = ${Name}
            "displayName" = ${DisplayName}
            "derived" = ${Derived}
        }

        return $PSO
    }

}

