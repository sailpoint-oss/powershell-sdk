#
# Identity Security Cloud V2025 API
# Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.
# Version: v2025
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Source ID and Native ID to Entitlement IDs mapping.

.PARAMETER SourceId
The ID of the source system.
.PARAMETER NativeIdToEntitlementIdsMappings
The native ID and entitlement IDs mapping in the source system.
.OUTPUTS

SourceIdAndNativeIdToEntitlementIdsMapping<PSCustomObject>
#>

function Initialize-V2025SourceIdAndNativeIdToEntitlementIdsMapping {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SourceId},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${NativeIdToEntitlementIdsMappings}
    )

    Process {
        'Creating PSCustomObject: PSSailpoint.V2025 => V2025SourceIdAndNativeIdToEntitlementIdsMapping' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if (!$SourceId) {
            throw "invalid value for 'SourceId', 'SourceId' cannot be null."
        }

        if (!$NativeIdToEntitlementIdsMappings) {
            throw "invalid value for 'NativeIdToEntitlementIdsMappings', 'NativeIdToEntitlementIdsMappings' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "sourceId" = ${SourceId}
            "nativeIdToEntitlementIdsMappings" = ${NativeIdToEntitlementIdsMappings}
        }

        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to SourceIdAndNativeIdToEntitlementIdsMapping<PSCustomObject>

.DESCRIPTION

Convert from JSON to SourceIdAndNativeIdToEntitlementIdsMapping<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

SourceIdAndNativeIdToEntitlementIdsMapping<PSCustomObject>
#>
function ConvertFrom-V2025JsonToSourceIdAndNativeIdToEntitlementIdsMapping {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSSailpoint.V2025 => V2025SourceIdAndNativeIdToEntitlementIdsMapping' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in V2025SourceIdAndNativeIdToEntitlementIdsMapping
        $AllProperties = ("sourceId", "nativeIdToEntitlementIdsMappings")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'sourceId' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "sourceId"))) {
            throw "Error! JSON cannot be serialized due to the required property 'sourceId' missing."
        } else {
            $SourceId = $JsonParameters.PSobject.Properties["sourceId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "nativeIdToEntitlementIdsMappings"))) {
            throw "Error! JSON cannot be serialized due to the required property 'nativeIdToEntitlementIdsMappings' missing."
        } else {
            $NativeIdToEntitlementIdsMappings = $JsonParameters.PSobject.Properties["nativeIdToEntitlementIdsMappings"].value
        }

        $PSO = [PSCustomObject]@{
            "sourceId" = ${SourceId}
            "nativeIdToEntitlementIdsMappings" = ${NativeIdToEntitlementIdsMappings}
        }

        return $PSO
    }

}

