#
# Identity Security Cloud V2024 API
# Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.
# Version: v2024
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

The data type of the value field

.PARAMETER Name
The data type of the value field
.PARAMETER Ordinal
The position of the value type
.OUTPUTS

OutlierValueType<PSCustomObject>
#>

function Initialize-V2024OutlierValueType {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("INTEGER", "FLOAT")]
        [String]
        ${Name},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${Ordinal}
    )

    Process {
        'Creating PSCustomObject: PSSailpoint.V2024 => V2024OutlierValueType' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($Ordinal -and $Ordinal -gt 1) {
          throw "invalid value for 'Ordinal', must be smaller than or equal to 1."
        }

        if ($Ordinal -and $Ordinal -lt 0) {
          throw "invalid value for 'Ordinal', must be greater than or equal to 0."
        }


        $PSO = [PSCustomObject]@{
            "name" = ${Name}
            "ordinal" = ${Ordinal}
        }

        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to OutlierValueType<PSCustomObject>

.DESCRIPTION

Convert from JSON to OutlierValueType<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

OutlierValueType<PSCustomObject>
#>
function ConvertFrom-V2024JsonToOutlierValueType {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSSailpoint.V2024 => V2024OutlierValueType' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in V2024OutlierValueType
        $AllProperties = ("name", "ordinal")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "name"))) { #optional property not found
            $Name = $null
        } else {
            $Name = $JsonParameters.PSobject.Properties["name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ordinal"))) { #optional property not found
            $Ordinal = $null
        } else {
            $Ordinal = $JsonParameters.PSobject.Properties["ordinal"].value
        }

        $PSO = [PSCustomObject]@{
            "name" = ${Name}
            "ordinal" = ${Ordinal}
        }

        return $PSO
    }

}

