#
# Identity Security Cloud V2025 API
# Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.
# Version: v2025
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER ChainId
ID of the serial chain.
.PARAMETER Tier
Starting at 1 defines the order in which the identities will get assigned
.PARAMETER IdentityId
Identity ID in the serial chain.
.PARAMETER IdentityType
Type of identity in the serial chain.
.OUTPUTS

ApprovalConfigSerialChainInner<PSCustomObject>
#>

function Initialize-V2025ApprovalConfigSerialChainInner {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ChainId},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${Tier},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${IdentityId},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${IdentityType}
    )

    Process {
        'Creating PSCustomObject: PSSailpoint.V2025 => V2025ApprovalConfigSerialChainInner' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "chainId" = ${ChainId}
            "tier" = ${Tier}
            "identityId" = ${IdentityId}
            "identityType" = ${IdentityType}
        }

        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ApprovalConfigSerialChainInner<PSCustomObject>

.DESCRIPTION

Convert from JSON to ApprovalConfigSerialChainInner<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ApprovalConfigSerialChainInner<PSCustomObject>
#>
function ConvertFrom-V2025JsonToApprovalConfigSerialChainInner {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSSailpoint.V2025 => V2025ApprovalConfigSerialChainInner' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in V2025ApprovalConfigSerialChainInner
        $AllProperties = ("chainId", "tier", "identityId", "identityType")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "chainId"))) { #optional property not found
            $ChainId = $null
        } else {
            $ChainId = $JsonParameters.PSobject.Properties["chainId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "tier"))) { #optional property not found
            $Tier = $null
        } else {
            $Tier = $JsonParameters.PSobject.Properties["tier"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "identityId"))) { #optional property not found
            $IdentityId = $null
        } else {
            $IdentityId = $JsonParameters.PSobject.Properties["identityId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "identityType"))) { #optional property not found
            $IdentityType = $null
        } else {
            $IdentityType = $JsonParameters.PSobject.Properties["identityType"].value
        }

        $PSO = [PSCustomObject]@{
            "chainId" = ${ChainId}
            "tier" = ${Tier}
            "identityId" = ${IdentityId}
            "identityType" = ${IdentityType}
        }

        return $PSO
    }

}

