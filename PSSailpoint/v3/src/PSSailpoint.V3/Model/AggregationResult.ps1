#
# Identity Security Cloud V3 API
# Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.
# Version: 3.0.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Aggregations
The document containing the results of the aggregation. This document is controlled by Elasticsearch and depends on the type of aggregation query that is run.  See Elasticsearch [Aggregations](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/search-aggregations.html) documentation for information. 
.PARAMETER Hits
The results of the aggregation search query. 
.OUTPUTS

AggregationResult<PSCustomObject>
#>

function Initialize-AggregationResult {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Aggregations},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${Hits}
    )

    Process {
        'Creating PSCustomObject: PSSailpoint.V3 => AggregationResult' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "aggregations" = ${Aggregations}
            "hits" = ${Hits}
        }

        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to AggregationResult<PSCustomObject>

.DESCRIPTION

Convert from JSON to AggregationResult<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

AggregationResult<PSCustomObject>
#>
function ConvertFrom-JsonToAggregationResult {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSSailpoint.V3 => AggregationResult' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in AggregationResult
        $AllProperties = ("aggregations", "hits")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "aggregations"))) { #optional property not found
            $Aggregations = $null
        } else {
            $Aggregations = $JsonParameters.PSobject.Properties["aggregations"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "hits"))) { #optional property not found
            $Hits = $null
        } else {
            $Hits = $JsonParameters.PSobject.Properties["hits"].value
        }

        $PSO = [PSCustomObject]@{
            "aggregations" = ${Aggregations}
            "hits" = ${Hits}
        }

        return $PSO
    }

}

