#
# Identity Security Cloud V2025 API
# Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.
# Version: v2025
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Request body for reassigning an approval request to another identity. This results in that identity being added as an authorized approver.

.PARAMETER Comment
Comment associated with the reassign request.
.PARAMETER ReassignFrom
Identity from which the approval is being reassigned. If left blank, and the approval is currently assigned to the user calling this endpoint, it will use the calling user's identity. If left blank, and the approval is not currently assigned to the user calling this endpoint, you need to be an admin, which would add the reassignTo as a new approver.
.PARAMETER ReassignTo
Identity to which the approval is being reassigned.
.OUTPUTS

ApprovalReassignRequest<PSCustomObject>
#>

function Initialize-V2025ApprovalReassignRequest {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Comment},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ReassignFrom},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ReassignTo}
    )

    Process {
        'Creating PSCustomObject: PSSailpoint.V2025 => V2025ApprovalReassignRequest' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "comment" = ${Comment}
            "reassignFrom" = ${ReassignFrom}
            "reassignTo" = ${ReassignTo}
        }

        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ApprovalReassignRequest<PSCustomObject>

.DESCRIPTION

Convert from JSON to ApprovalReassignRequest<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ApprovalReassignRequest<PSCustomObject>
#>
function ConvertFrom-V2025JsonToApprovalReassignRequest {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSSailpoint.V2025 => V2025ApprovalReassignRequest' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in V2025ApprovalReassignRequest
        $AllProperties = ("comment", "reassignFrom", "reassignTo")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "comment"))) { #optional property not found
            $Comment = $null
        } else {
            $Comment = $JsonParameters.PSobject.Properties["comment"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "reassignFrom"))) { #optional property not found
            $ReassignFrom = $null
        } else {
            $ReassignFrom = $JsonParameters.PSobject.Properties["reassignFrom"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "reassignTo"))) { #optional property not found
            $ReassignTo = $null
        } else {
            $ReassignTo = $JsonParameters.PSobject.Properties["reassignTo"].value
        }

        $PSO = [PSCustomObject]@{
            "comment" = ${Comment}
            "reassignFrom" = ${ReassignFrom}
            "reassignTo" = ${ReassignTo}
        }

        return $PSO
    }

}

