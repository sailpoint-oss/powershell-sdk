#
# Identity Security Cloud Beta API
# Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.
# Version: 3.1.0-beta
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Ids
The list of Identities IDs to invite - required when 'uninvited' is false
.PARAMETER Uninvited
indicator (optional) to invite all unregistered identities in the system within a limit 1000. This parameter makes sense only when 'ids' is empty.
.OUTPUTS

InviteIdentitiesRequest<PSCustomObject>
#>

function Initialize-BetaInviteIdentitiesRequest {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${Ids},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${Uninvited} = $false
    )

    Process {
        'Creating PSCustomObject: PSSailpoint.Beta => BetaInviteIdentitiesRequest' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "ids" = ${Ids}
            "uninvited" = ${Uninvited}
        }

        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to InviteIdentitiesRequest<PSCustomObject>

.DESCRIPTION

Convert from JSON to InviteIdentitiesRequest<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

InviteIdentitiesRequest<PSCustomObject>
#>
function ConvertFrom-BetaJsonToInviteIdentitiesRequest {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSSailpoint.Beta => BetaInviteIdentitiesRequest' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in BetaInviteIdentitiesRequest
        $AllProperties = ("ids", "uninvited")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ids"))) { #optional property not found
            $Ids = $null
        } else {
            $Ids = $JsonParameters.PSobject.Properties["ids"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "uninvited"))) { #optional property not found
            $Uninvited = $null
        } else {
            $Uninvited = $JsonParameters.PSobject.Properties["uninvited"].value
        }

        $PSO = [PSCustomObject]@{
            "ids" = ${Ids}
            "uninvited" = ${Uninvited}
        }

        return $PSO
    }

}

