#
# Identity Security Cloud V2024 API
# Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.
# Version: v2024
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER IdentityEntity
No description available.
.OUTPUTS

IdentityEntities<PSCustomObject>
#>

function Initialize-V2024IdentityEntities {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${IdentityEntity}
    )

    Process {
        'Creating PSCustomObject: PSSailpoint.V2024 => V2024IdentityEntities' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "identityEntity" = ${IdentityEntity}
        }

        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to IdentityEntities<PSCustomObject>

.DESCRIPTION

Convert from JSON to IdentityEntities<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

IdentityEntities<PSCustomObject>
#>
function ConvertFrom-V2024JsonToIdentityEntities {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSSailpoint.V2024 => V2024IdentityEntities' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in V2024IdentityEntities
        $AllProperties = ("identityEntity")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "identityEntity"))) { #optional property not found
            $IdentityEntity = $null
        } else {
            $IdentityEntity = $JsonParameters.PSobject.Properties["identityEntity"].value
        }

        $PSO = [PSCustomObject]@{
            "identityEntity" = ${IdentityEntity}
        }

        return $PSO
    }

}

