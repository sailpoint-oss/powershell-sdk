#
# Identity Security Cloud V2024 API
# Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.
# Version: v2024
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Set of FormElementValidation items.

.PARAMETER ValidationType
The type of data validation that you wish to enforce, e.g., a required field, a minimum length, etc.
.OUTPUTS

FormElementValidationsSet<PSCustomObject>
#>

function Initialize-V2024FormElementValidationsSet {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("REQUIRED", "MIN_LENGTH", "MAX_LENGTH", "REGEX", "DATE", "MAX_DATE", "MIN_DATE", "LESS_THAN_DATE", "PHONE", "EMAIL", "DATA_SOURCE", "TEXTAREA")]
        [String]
        ${ValidationType}
    )

    Process {
        'Creating PSCustomObject: PSSailpoint.V2024 => V2024FormElementValidationsSet' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "validationType" = ${ValidationType}
        }

        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to FormElementValidationsSet<PSCustomObject>

.DESCRIPTION

Convert from JSON to FormElementValidationsSet<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

FormElementValidationsSet<PSCustomObject>
#>
function ConvertFrom-V2024JsonToFormElementValidationsSet {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSSailpoint.V2024 => V2024FormElementValidationsSet' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in V2024FormElementValidationsSet
        $AllProperties = ("validationType")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "validationType"))) { #optional property not found
            $ValidationType = $null
        } else {
            $ValidationType = $JsonParameters.PSobject.Properties["validationType"].value
        }

        $PSO = [PSCustomObject]@{
            "validationType" = ${ValidationType}
        }

        return $PSO
    }

}

