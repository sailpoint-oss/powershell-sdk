#
# Identity Security Cloud Beta API
# Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.
# Version: 3.1.0-beta
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Created
Created is the date the file was uploaded
.PARAMETER FileId
fileId is a unique ULID that serves as an identifier for the form definition file
.PARAMETER FormDefinitionId
FormDefinitionID is a unique guid identifying this form definition
.OUTPUTS

FormDefinitionFileUploadResponse<PSCustomObject>
#>

function Initialize-BetaFormDefinitionFileUploadResponse {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Created},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${FileId},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${FormDefinitionId}
    )

    Process {
        'Creating PSCustomObject: Tm.Beta => BetaFormDefinitionFileUploadResponse' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "created" = ${Created}
            "fileId" = ${FileId}
            "formDefinitionId" = ${FormDefinitionId}
        }

        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to FormDefinitionFileUploadResponse<PSCustomObject>

.DESCRIPTION

Convert from JSON to FormDefinitionFileUploadResponse<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

FormDefinitionFileUploadResponse<PSCustomObject>
#>
function ConvertFrom-BetaJsonToFormDefinitionFileUploadResponse {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: Tm.Beta => BetaFormDefinitionFileUploadResponse' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in BetaFormDefinitionFileUploadResponse
        $AllProperties = ("created", "fileId", "formDefinitionId")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "created"))) { #optional property not found
            $Created = $null
        } else {
            $Created = $JsonParameters.PSobject.Properties["created"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "fileId"))) { #optional property not found
            $FileId = $null
        } else {
            $FileId = $JsonParameters.PSobject.Properties["fileId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "formDefinitionId"))) { #optional property not found
            $FormDefinitionId = $null
        } else {
            $FormDefinitionId = $JsonParameters.PSobject.Properties["formDefinitionId"].value
        }

        $PSO = [PSCustomObject]@{
            "created" = ${Created}
            "fileId" = ${FileId}
            "formDefinitionId" = ${FormDefinitionId}
        }

        return $PSO
    }

}

