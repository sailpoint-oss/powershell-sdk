#
# Identity Security Cloud V2025 API
# Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.
# Version: v2025
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Indicates whether the entitlement's display name and/or description have been manually updated.

.PARAMETER DESCRIPTION
No description available.
.PARAMETER DISPLAYNAME
No description available.
.OUTPUTS

EntitlementDocumentAllOfManuallyUpdatedFields<PSCustomObject>
#>

function Initialize-V2025EntitlementDocumentAllOfManuallyUpdatedFields {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${DESCRIPTION} = $false,
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${DISPLAYNAME} = $false
    )

    Process {
        'Creating PSCustomObject: PSSailpoint.V2025 => V2025EntitlementDocumentAllOfManuallyUpdatedFields' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "DESCRIPTION" = ${DESCRIPTION}
            "DISPLAY_NAME" = ${DISPLAYNAME}
        }

        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to EntitlementDocumentAllOfManuallyUpdatedFields<PSCustomObject>

.DESCRIPTION

Convert from JSON to EntitlementDocumentAllOfManuallyUpdatedFields<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

EntitlementDocumentAllOfManuallyUpdatedFields<PSCustomObject>
#>
function ConvertFrom-V2025JsonToEntitlementDocumentAllOfManuallyUpdatedFields {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSSailpoint.V2025 => V2025EntitlementDocumentAllOfManuallyUpdatedFields' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in V2025EntitlementDocumentAllOfManuallyUpdatedFields
        $AllProperties = ("DESCRIPTION", "DISPLAY_NAME")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "DESCRIPTION"))) { #optional property not found
            $DESCRIPTION = $null
        } else {
            $DESCRIPTION = $JsonParameters.PSobject.Properties["DESCRIPTION"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "DISPLAY_NAME"))) { #optional property not found
            $DISPLAYNAME = $null
        } else {
            $DISPLAYNAME = $JsonParameters.PSobject.Properties["DISPLAY_NAME"].value
        }

        $PSO = [PSCustomObject]@{
            "DESCRIPTION" = ${DESCRIPTION}
            "DISPLAY_NAME" = ${DISPLAYNAME}
        }

        return $PSO
    }

}

