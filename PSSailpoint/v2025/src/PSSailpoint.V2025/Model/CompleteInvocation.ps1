#
# Identity Security Cloud V2025 API
# Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.
# Version: v2025
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Secret
Unique invocation secret that was generated when the invocation was created. Required to authenticate to the endpoint.
.PARAMETER VarError
The error message to indicate a failed invocation or error if any.
.PARAMETER Output
Trigger output to complete the invocation. Its schema is defined in the trigger definition.
.OUTPUTS

CompleteInvocation<PSCustomObject>
#>

function Initialize-V2025CompleteInvocation {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Secret},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${VarError},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Output}
    )

    Process {
        'Creating PSCustomObject: PSSailpoint.V2025 => V2025CompleteInvocation' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if (!$Secret) {
            throw "invalid value for 'Secret', 'Secret' cannot be null."
        }

        if (!$Output) {
            throw "invalid value for 'Output', 'Output' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "secret" = ${Secret}
            "error" = ${VarError}
            "output" = ${Output}
        }

        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to CompleteInvocation<PSCustomObject>

.DESCRIPTION

Convert from JSON to CompleteInvocation<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

CompleteInvocation<PSCustomObject>
#>
function ConvertFrom-V2025JsonToCompleteInvocation {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSSailpoint.V2025 => V2025CompleteInvocation' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in V2025CompleteInvocation
        $AllProperties = ("secret", "error", "output")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'secret' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "secret"))) {
            throw "Error! JSON cannot be serialized due to the required property 'secret' missing."
        } else {
            $Secret = $JsonParameters.PSobject.Properties["secret"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "output"))) {
            throw "Error! JSON cannot be serialized due to the required property 'output' missing."
        } else {
            $Output = $JsonParameters.PSobject.Properties["output"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "error"))) { #optional property not found
            $VarError = $null
        } else {
            $VarError = $JsonParameters.PSobject.Properties["error"].value
        }

        $PSO = [PSCustomObject]@{
            "secret" = ${Secret}
            "error" = ${VarError}
            "output" = ${Output}
        }

        return $PSO
    }

}

