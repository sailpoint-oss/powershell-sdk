#
# Identity Security Cloud V2024 API
# Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.
# Version: v2024
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Sed Batch Request

.PARAMETER Entitlements
list of entitlement ids
.PARAMETER Seds
list of sed ids
.OUTPUTS

SedBatchRequest<PSCustomObject>
#>

function Initialize-V2024SedBatchRequest {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${Entitlements},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${Seds}
    )

    Process {
        'Creating PSCustomObject: PSSailpoint.V2024 => V2024SedBatchRequest' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if (!$Entitlements -and $Entitlements.length -lt 1) {
            throw "invalid value for 'Entitlements', number of items must be greater than or equal to 1."
        }

        if (!$Seds -and $Seds.length -lt 1) {
            throw "invalid value for 'Seds', number of items must be greater than or equal to 1."
        }


        $PSO = [PSCustomObject]@{
            "entitlements" = ${Entitlements}
            "seds" = ${Seds}
        }

        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to SedBatchRequest<PSCustomObject>

.DESCRIPTION

Convert from JSON to SedBatchRequest<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

SedBatchRequest<PSCustomObject>
#>
function ConvertFrom-V2024JsonToSedBatchRequest {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSSailpoint.V2024 => V2024SedBatchRequest' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in V2024SedBatchRequest
        $AllProperties = ("entitlements", "seds")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "entitlements"))) { #optional property not found
            $Entitlements = $null
        } else {
            $Entitlements = $JsonParameters.PSobject.Properties["entitlements"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "seds"))) { #optional property not found
            $Seds = $null
        } else {
            $Seds = $JsonParameters.PSobject.Properties["seds"].value
        }

        $PSO = [PSCustomObject]@{
            "entitlements" = ${Entitlements}
            "seds" = ${Seds}
        }

        return $PSO
    }

}

