#
# Identity Security Cloud V2025 API
# Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.
# Version: v2025
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Id
System-generated unique ID of the Object
.PARAMETER MachineIdentityId
System-generated unique ID of the Machine Identity
.PARAMETER Source
No description available.
.PARAMETER Entitlement
No description available.
.OUTPUTS

MachineIdentityUserEntitlementResponse<PSCustomObject>
#>

function Initialize-V2025MachineIdentityUserEntitlementResponse {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Id},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${MachineIdentityId},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Source},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Entitlement}
    )

    Process {
        'Creating PSCustomObject: PSSailpoint.V2025 => V2025MachineIdentityUserEntitlementResponse' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "machineIdentityId" = ${MachineIdentityId}
            "source" = ${Source}
            "entitlement" = ${Entitlement}
        }

        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to MachineIdentityUserEntitlementResponse<PSCustomObject>

.DESCRIPTION

Convert from JSON to MachineIdentityUserEntitlementResponse<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

MachineIdentityUserEntitlementResponse<PSCustomObject>
#>
function ConvertFrom-V2025JsonToMachineIdentityUserEntitlementResponse {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSSailpoint.V2025 => V2025MachineIdentityUserEntitlementResponse' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in V2025MachineIdentityUserEntitlementResponse
        $AllProperties = ("id", "machineIdentityId", "source", "entitlement", "created")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "machineIdentityId"))) { #optional property not found
            $MachineIdentityId = $null
        } else {
            $MachineIdentityId = $JsonParameters.PSobject.Properties["machineIdentityId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "source"))) { #optional property not found
            $Source = $null
        } else {
            $Source = $JsonParameters.PSobject.Properties["source"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "entitlement"))) { #optional property not found
            $Entitlement = $null
        } else {
            $Entitlement = $JsonParameters.PSobject.Properties["entitlement"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "created"))) { #optional property not found
            $Created = $null
        } else {
            $Created = $JsonParameters.PSobject.Properties["created"].value
        }

        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "machineIdentityId" = ${MachineIdentityId}
            "source" = ${Source}
            "entitlement" = ${Entitlement}
            "created" = ${Created}
        }

        return $PSO
    }

}

