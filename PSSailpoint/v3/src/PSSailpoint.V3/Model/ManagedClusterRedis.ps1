#
# Identity Security Cloud V3 API
# Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.
# Version: 3.0.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Managed Cluster Redis Configuration

.PARAMETER RedisHost
ManagedCluster redisHost
.PARAMETER RedisPort
ManagedCluster redisPort
.OUTPUTS

ManagedClusterRedis<PSCustomObject>
#>

function Initialize-ManagedClusterRedis {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${RedisHost},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${RedisPort}
    )

    Process {
        'Creating PSCustomObject: PSSailpoint.V3 => ManagedClusterRedis' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "redisHost" = ${RedisHost}
            "redisPort" = ${RedisPort}
        }

        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ManagedClusterRedis<PSCustomObject>

.DESCRIPTION

Convert from JSON to ManagedClusterRedis<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ManagedClusterRedis<PSCustomObject>
#>
function ConvertFrom-JsonToManagedClusterRedis {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSSailpoint.V3 => ManagedClusterRedis' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ManagedClusterRedis
        $AllProperties = ("redisHost", "redisPort")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "redisHost"))) { #optional property not found
            $RedisHost = $null
        } else {
            $RedisHost = $JsonParameters.PSobject.Properties["redisHost"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "redisPort"))) { #optional property not found
            $RedisPort = $null
        } else {
            $RedisPort = $JsonParameters.PSobject.Properties["redisPort"].value
        }

        $PSO = [PSCustomObject]@{
            "redisHost" = ${RedisHost}
            "redisPort" = ${RedisPort}
        }

        return $PSO
    }

}

