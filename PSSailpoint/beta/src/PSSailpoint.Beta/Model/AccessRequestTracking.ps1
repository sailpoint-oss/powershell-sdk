#
# Identity Security Cloud Beta API
# Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.
# Version: 3.1.0-beta
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER RequestedFor
The identity id in which the access request is for.
.PARAMETER RequestedItemsDetails
The details of the item requested.
.PARAMETER AttributesHash
a hash representation of the access requested, useful for longer term tracking client side.
.PARAMETER AccessRequestIds
a list of access request identifiers, generally only one will be populated, but high volume requested may result in multiple ids.
.OUTPUTS

AccessRequestTracking<PSCustomObject>
#>

function Initialize-BetaAccessRequestTracking {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${RequestedFor},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${RequestedItemsDetails},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${AttributesHash},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${AccessRequestIds}
    )

    Process {
        'Creating PSCustomObject: PSSailpoint.Beta => BetaAccessRequestTracking' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "requestedFor" = ${RequestedFor}
            "requestedItemsDetails" = ${RequestedItemsDetails}
            "attributesHash" = ${AttributesHash}
            "accessRequestIds" = ${AccessRequestIds}
        }

        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to AccessRequestTracking<PSCustomObject>

.DESCRIPTION

Convert from JSON to AccessRequestTracking<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

AccessRequestTracking<PSCustomObject>
#>
function ConvertFrom-BetaJsonToAccessRequestTracking {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSSailpoint.Beta => BetaAccessRequestTracking' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in BetaAccessRequestTracking
        $AllProperties = ("requestedFor", "requestedItemsDetails", "attributesHash", "accessRequestIds")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "requestedFor"))) { #optional property not found
            $RequestedFor = $null
        } else {
            $RequestedFor = $JsonParameters.PSobject.Properties["requestedFor"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "requestedItemsDetails"))) { #optional property not found
            $RequestedItemsDetails = $null
        } else {
            $RequestedItemsDetails = $JsonParameters.PSobject.Properties["requestedItemsDetails"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "attributesHash"))) { #optional property not found
            $AttributesHash = $null
        } else {
            $AttributesHash = $JsonParameters.PSobject.Properties["attributesHash"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "accessRequestIds"))) { #optional property not found
            $AccessRequestIds = $null
        } else {
            $AccessRequestIds = $JsonParameters.PSobject.Properties["accessRequestIds"].value
        }

        $PSO = [PSCustomObject]@{
            "requestedFor" = ${RequestedFor}
            "requestedItemsDetails" = ${RequestedItemsDetails}
            "attributesHash" = ${AttributesHash}
            "accessRequestIds" = ${AccessRequestIds}
        }

        return $PSO
    }

}

