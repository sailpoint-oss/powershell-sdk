#
# Identity Security Cloud V2024 API
# Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.
# Version: v2024
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER IframeWhiteList
Parameter that organizational administrators can adjust to permit another domain to encapsulate IDN within an iframe. If you would like to reset the value use ""null"". It will only allow include into iframe non authenticated portions of the product, such as password reset.
.PARAMETER UsernameLabel
Descriptor for the username input field. If you would like to reset the value use ""null"".
.PARAMETER UsernameEmptyText
Placeholder text displayed in the username input field. If you would like to reset the value use ""null"".
.OUTPUTS

TenantUiMetadataItemUpdateRequest<PSCustomObject>
#>

function Initialize-V2024TenantUiMetadataItemUpdateRequest {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${IframeWhiteList},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${UsernameLabel},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${UsernameEmptyText}
    )

    Process {
        'Creating PSCustomObject: Tm.V2024 => V2024TenantUiMetadataItemUpdateRequest' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "iframeWhiteList" = ${IframeWhiteList}
            "usernameLabel" = ${UsernameLabel}
            "usernameEmptyText" = ${UsernameEmptyText}
        }

        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to TenantUiMetadataItemUpdateRequest<PSCustomObject>

.DESCRIPTION

Convert from JSON to TenantUiMetadataItemUpdateRequest<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

TenantUiMetadataItemUpdateRequest<PSCustomObject>
#>
function ConvertFrom-V2024JsonToTenantUiMetadataItemUpdateRequest {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: Tm.V2024 => V2024TenantUiMetadataItemUpdateRequest' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in V2024TenantUiMetadataItemUpdateRequest
        $AllProperties = ("iframeWhiteList", "usernameLabel", "usernameEmptyText")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "iframeWhiteList"))) { #optional property not found
            $IframeWhiteList = $null
        } else {
            $IframeWhiteList = $JsonParameters.PSobject.Properties["iframeWhiteList"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "usernameLabel"))) { #optional property not found
            $UsernameLabel = $null
        } else {
            $UsernameLabel = $JsonParameters.PSobject.Properties["usernameLabel"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "usernameEmptyText"))) { #optional property not found
            $UsernameEmptyText = $null
        } else {
            $UsernameEmptyText = $JsonParameters.PSobject.Properties["usernameEmptyText"].value
        }

        $PSO = [PSCustomObject]@{
            "iframeWhiteList" = ${IframeWhiteList}
            "usernameLabel" = ${UsernameLabel}
            "usernameEmptyText" = ${UsernameEmptyText}
        }

        return $PSO
    }

}

