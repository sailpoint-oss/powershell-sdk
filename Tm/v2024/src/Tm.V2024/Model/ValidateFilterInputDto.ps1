#
# Identity Security Cloud V2024 API
# Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.
# Version: v2024
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER VarInput
Mock input to evaluate filter expression against.
.PARAMETER VarFilter
JSONPath filter to conditionally invoke trigger when expression evaluates to true.
.OUTPUTS

ValidateFilterInputDto<PSCustomObject>
#>

function Initialize-V2024ValidateFilterInputDto {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${VarInput},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${VarFilter}
    )

    Process {
        'Creating PSCustomObject: Tm.V2024 => V2024ValidateFilterInputDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if (!$VarInput) {
            throw "invalid value for 'VarInput', 'VarInput' cannot be null."
        }

        if (!$VarFilter) {
            throw "invalid value for 'VarFilter', 'VarFilter' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "input" = ${VarInput}
            "filter" = ${VarFilter}
        }

        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ValidateFilterInputDto<PSCustomObject>

.DESCRIPTION

Convert from JSON to ValidateFilterInputDto<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ValidateFilterInputDto<PSCustomObject>
#>
function ConvertFrom-V2024JsonToValidateFilterInputDto {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: Tm.V2024 => V2024ValidateFilterInputDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in V2024ValidateFilterInputDto
        $AllProperties = ("input", "filter")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'input' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "input"))) {
            throw "Error! JSON cannot be serialized due to the required property 'input' missing."
        } else {
            $VarInput = $JsonParameters.PSobject.Properties["input"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "filter"))) {
            throw "Error! JSON cannot be serialized due to the required property 'filter' missing."
        } else {
            $VarFilter = $JsonParameters.PSobject.Properties["filter"].value
        }

        $PSO = [PSCustomObject]@{
            "input" = ${VarInput}
            "filter" = ${VarFilter}
        }

        return $PSO
    }

}

